#include <GLFW/glfw3.h>

int main(void)
{
    GLFWwindow* window;

    /* Initialize the library */
    if (!glfwInit())
        return -1;

    /* Create a windowed mode window and its OpenGL context */
    window = glfwCreateWindow(640, 480, "Hello World", NULL, NULL);
    if (!window)
    {
        glfwTerminate();
        return -1;
    }

    /* Make the window's context current */
    glfwMakeContextCurrent(window);

    glClearColor(0.0, 0.15, 0.25, 1.0);

    /* Loop until the user closes the window */
    while (!glfwWindowShouldClose(window))
    {
        /* Poll for and process events */
        glfwPollEvents();

        if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)
        {
            glfwSetWindowShouldClose(window, GLFW_TRUE);
        }
        /* Render here */
        glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
        glClear(GL_COLOR_BUFFER_BIT);
        glLineWidth(0.5);

        glBegin(GL_TRIANGLES);
        glColor3f(0.0f, 1.0f, 0.0f);
        glVertex2f(-0.65f, 0.06f);
        glVertex2f(0.65f, 0.06f);
        glVertex2f(0.0f, 0.70f);
        glEnd();

        glBegin(GL_QUADS);
        glColor3f(1.0f, 1.0f, 1.0f);
        glVertex2f(-0.65f, 0.06f);
        glVertex2f(0.65f, 0.06f);
        glVertex2f(0.65f, -0.85f);
        glVertex2f(-0.65f, -0.85f);
        glEnd();

        glBegin(GL_QUADS);
        glColor3f(0.0f, 0.0f, 1.0f);
        glVertex2f(-0.20f, -0.25f);
        glVertex2f(0.20f, -0.25f);
        glVertex2f(0.20f, -0.85f);
        glVertex2f(-0.20f, -0.85f);
        glEnd();

        glBegin(GL_QUADS);
        glColor3f(1.0f, 0.0f, 0.0f);
        glVertex2f(-0.60f, -0.55f);
        glVertex2f(-0.30f, -0.55f);
        glVertex2f(-0.30f, -0.35f);
        glVertex2f(-0.60f, -0.35f);
        glEnd();

        glBegin(GL_QUADS);
        glColor3f(1.0f, 0.0f, 0.0f);
        glVertex2f(0.30f, -0.55f);
        glVertex2f(0.60f, -0.55f);
        glVertex2f(0.60f, -0.35f);
        glVertex2f(0.30f, -0.35f);
        glEnd();

        glBegin(GL_QUADS);
        glColor3f(1.0f, 0.0f, 1.0f);
        glVertex2f(0.65f, -0.85f);
        glVertex2f(-0.65f, -0.85f);
        glVertex2f(-0.68f, -0.90f);
        glVertex2f(0.68f, -0.90f);
        glEnd();


        glFlush();


        /* Swap front and back buffers */
        glfwSwapBuffers(window);
    }

    glfwTerminate();
    return 0;
}
